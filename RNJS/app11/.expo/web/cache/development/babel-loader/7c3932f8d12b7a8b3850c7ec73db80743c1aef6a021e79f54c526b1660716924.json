{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport api from \"../../services/api.js\";\nimport AppLoading from 'expo-app-loading';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport NewButton from \"../../components/Button/NewButton.js\";\nimport OutlineButton from \"../../components/OutlineButton/OutlineButton.js\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFonts, Roboto_100Thin, Roboto_100Thin_Italic, Roboto_300Light, Roboto_300Light_Italic, Roboto_400Regular, Roboto_400Regular_Italic, Roboto_500Medium, Roboto_500Medium_Italic, Roboto_700Bold, Roboto_700Bold_Italic, Roboto_900Black, Roboto_900Black_Italic } from \"@expo-google-fonts/roboto\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Homescreen = function Homescreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useFonts = useFonts({\n      Roboto_100Thin: Roboto_100Thin,\n      Roboto_100Thin_Italic: Roboto_100Thin_Italic,\n      Roboto_300Light: Roboto_300Light,\n      Roboto_300Light_Italic: Roboto_300Light_Italic,\n      Roboto_400Regular: Roboto_400Regular,\n      Roboto_400Regular_Italic: Roboto_400Regular_Italic,\n      Roboto_500Medium: Roboto_500Medium,\n      Roboto_500Medium_Italic: Roboto_500Medium_Italic,\n      Roboto_700Bold: Roboto_700Bold,\n      Roboto_700Bold_Italic: Roboto_700Bold_Italic,\n      Roboto_900Black: Roboto_900Black,\n      Roboto_900Black_Italic: Roboto_900Black_Italic\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var storeData = function () {\n    var _ref2 = _asyncToGenerator(function* (key, value) {\n      try {\n        yield AsyncStorage.setItem(key, value);\n      } catch (e) {\n        console.log(\"Error while storing token: \" + e);\n      }\n    });\n    return function storeData(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  function tryConnection() {\n    var headers = {\n      'Content-Type': 'application/json'\n    };\n    api.post('api/auth/login', {\n      \"user\": \"iot\",\n      \"password\": \"suasenhaaqui\"\n    }, {\n      headers: headers\n    }).then(function (response) {\n      console.log(\"Seu token:\" + response.data[\"token\"]);\n      storeData('@storage_Key', response.data[\"token\"]);\n      navigation.navigate(\"Connect\");\n      console.log(\"Coneção bem sucedida\");\n    }).catch(function (error) {\n      console.log(\"Erro na autenticação\\n\" + error);\n    });\n  }\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  } else {\n    return _jsxs(View, {\n      style: styles.containerPrincipal,\n      children: [_jsxs(View, {\n        style: styles.containerContent,\n        children: [_jsxs(View, {\n          style: styles.textContent,\n          children: [_jsx(Text, {\n            style: styles.pageTitle,\n            children: \"SMART\"\n          }), _jsx(Text, {\n            style: styles.pageSubTitle,\n            children: \"Vaso inteligente\"\n          })]\n        }), _jsxs(View, {\n          style: styles.imagesIcons,\n          children: [_jsx(Image, {\n            style: {\n              width: 20,\n              height: 34\n            },\n            source: require(\"../../../assets/icons/phone.png\")\n          }), _jsx(Image, {\n            style: {\n              width: 36,\n              height: 24\n            },\n            source: require(\"../../../assets/icons/computer.png\")\n          }), _jsx(Image, {\n            style: {\n              width: 41,\n              height: 32\n            },\n            source: require(\"../../../assets/icons/home.png\")\n          }), _jsx(Image, {\n            style: {\n              width: 27,\n              height: 33\n            },\n            source: require(\"../../../assets/icons/security.png\")\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.containerButtons,\n        children: [_jsx(NewButton, {\n          bgColor: \"#8a2be2\",\n          width: 120,\n          height: 90,\n          bRadius: 10,\n          title: \"CONNECT\",\n          txtColor: \"white\",\n          txtSize: 17,\n          marginTop: \"25%\",\n          onPress: tryConnection\n        }), _jsx(OutlineButton, {\n          title: \"Access\",\n          onPress: function onPress() {\n            return navigation.navigate('Connect');\n          }\n        })]\n      })]\n    });\n  }\n};\nexport default Homescreen;","map":{"version":3,"names":["React","api","AppLoading","View","Text","Image","NewButton","OutlineButton","AsyncStorage","useFonts","Roboto_100Thin","Roboto_100Thin_Italic","Roboto_300Light","Roboto_300Light_Italic","Roboto_400Regular","Roboto_400Regular_Italic","Roboto_500Medium","Roboto_500Medium_Italic","Roboto_700Bold","Roboto_700Bold_Italic","Roboto_900Black","Roboto_900Black_Italic","styles","jsx","_jsx","jsxs","_jsxs","Homescreen","_ref","navigation","_useFonts","_useFonts2","_slicedToArray","fontsLoaded","storeData","_ref2","_asyncToGenerator","key","value","setItem","e","console","log","_x","_x2","apply","arguments","tryConnection","headers","post","then","response","data","navigate","catch","error","style","containerPrincipal","children","containerContent","textContent","pageTitle","pageSubTitle","imagesIcons","width","height","source","require","containerButtons","bgColor","bRadius","title","txtColor","txtSize","marginTop","onPress"],"sources":["C:/Users/esilva54/Documents/Projetos-estudo/RNJS/app11/src/Pages/Home/Homescreen.js"],"sourcesContent":["import React from \"react\";\r\nimport api from \"../../services/api.js\";\r\nimport AppLoading from 'expo-app-loading';\r\nimport { View, Text, Image } from \"react-native\";\r\nimport NewButton from \"../../components/Button/NewButton.js\";\r\nimport OutlineButton from \"../../components/OutlineButton/OutlineButton.js\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {\r\n  useFonts,\r\n  Roboto_100Thin,\r\n  Roboto_100Thin_Italic,\r\n  Roboto_300Light,\r\n  Roboto_300Light_Italic,\r\n  Roboto_400Regular,\r\n  Roboto_400Regular_Italic,\r\n  Roboto_500Medium,\r\n  Roboto_500Medium_Italic,\r\n  Roboto_700Bold,\r\n  Roboto_700Bold_Italic,\r\n  Roboto_900Black,\r\n  Roboto_900Black_Italic,\r\n} from \"@expo-google-fonts/roboto\";\r\n\r\nimport styles from \"./styles\";\r\n\r\n// This component will control our main page.\r\n// When our app loads, the first page our user is going\r\n// to see is returned from this component.\r\n// It receives a prop, navigation, that can handle\r\n// navigation between screens.\r\nconst Homescreen = ({ navigation }) => {\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    Roboto_100Thin,\r\n    Roboto_100Thin_Italic,\r\n    Roboto_300Light,\r\n    Roboto_300Light_Italic,\r\n    Roboto_400Regular,\r\n    Roboto_400Regular_Italic,\r\n    Roboto_500Medium,\r\n    Roboto_500Medium_Italic,\r\n    Roboto_700Bold,\r\n    Roboto_700Bold_Italic,\r\n    Roboto_900Black,\r\n    Roboto_900Black_Italic,\r\n  });\r\n\r\n  const storeData = async (key, value) => {\r\n    try {\r\n      await AsyncStorage.setItem(key, value)\r\n    } catch (e) {\r\n      console.log(\"Error while storing token: \" + e);\r\n    }\r\n  }\r\n\r\n  function tryConnection() {\r\n\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n    }\r\n\r\n    api.post('api/auth/login', {\r\n      \"user\": \"iot\",\r\n      \"password\": \"suasenhaaqui\"\r\n    }, {\r\n      headers\r\n    })\r\n      .then(function (response) {\r\n        console.log(\"Seu token:\" + response.data[\"token\"]);\r\n        storeData('@storage_Key', response.data[\"token\"]);\r\n        navigation.navigate(\"Connect\")\r\n        console.log(\"Coneção bem sucedida\" );\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Erro na autenticação\\n\" + error);\r\n      });\r\n  }\r\n\r\n  // Wait until all the fonts are loaded\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  } else {\r\n    return (\r\n      <View style={styles.containerPrincipal}>\r\n        <View style={styles.containerContent}>\r\n          {/* Main text content of Home page */}\r\n          <View style={styles.textContent}>\r\n            <Text style={styles.pageTitle}>SMART</Text>\r\n            <Text style={styles.pageSubTitle}>Vaso inteligente</Text>\r\n          </View>\r\n\r\n          {/* 4 images icons which represents main focus of IOT apps */}\r\n          <View style={styles.imagesIcons}>\r\n            <Image\r\n              style={{ width: 20, height: 34 }}\r\n              source={require(\"../../../assets/icons/phone.png\")}\r\n            />\r\n            <Image\r\n              style={{ width: 36, height: 24 }}\r\n              source={require(\"../../../assets/icons/computer.png\")}\r\n            />\r\n            <Image\r\n              style={{ width: 41, height: 32 }}\r\n              source={require(\"../../../assets/icons/home.png\")}\r\n            />\r\n            <Image\r\n              style={{ width: 27, height: 33 }}\r\n              source={require(\"../../../assets/icons/security.png\")}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        {/* Container that holds the two main buttons */}\r\n        <View style={styles.containerButtons}>\r\n          {/* When pressed, this first button sends the user \r\n          to \"Connected\" component/page */}\r\n          <NewButton\r\n            bgColor={\"#8a2be2\"}\r\n            width={120}\r\n            height={90}\r\n            bRadius={10}\r\n            title=\"CONNECT\"\r\n            txtColor=\"white\"\r\n            txtSize={17}\r\n            marginTop={\"25%\"}\r\n            onPress={tryConnection}\r\n          />\r\n          {/* When pressed, this second button sends the user \r\n          to \"About\" component/page */}\r\n          \r\n          <OutlineButton\r\n            title=\"Access\"\r\n            onPress={() => navigation.navigate('Connect')}\r\n          />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Homescreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}